CREATE OR REPLACE package PACK_CREA_DITTA_UMA is

    PROCEDURE  CREA_DITTA_UMA(P_ID_DITTA_UMA_NEW    IN     DB_DITTA_UMA.ID_DITTA_UMA%TYPE,
                                 P_ID_DITTA_UMA_OLD    IN     DB_DITTA_UMA.ID_DITTA_UMA%TYPE,
                                 P_ID_UTENTE_AGGIORNAMENTO     IN        DB_DITTA_UMA.EXT_ID_UTENTE_AGGIORNAMENTO%TYPE,
                               P_CODERR                      IN OUT VARCHAR2,
                              P_MSGERR                     IN OUT VARCHAR2);
END;
/


CREATE OR REPLACE package body PACK_CREA_DITTA_UMA is
EsciRountine       EXCEPTION;
ERRORE              EXCEPTION;

--P_COD_ERR     '0' ELABORAZIONE OK
--             '1' ELABORAZIONE CON ERRORE

FUNCTION CARICA_MACCHINE(P_ID_DITTA_UMA_NEW          IN     DB_DITTA_UMA.ID_DITTA_UMA%TYPE,
                         P_ID_DITTA_UMA_OLD          IN     DB_DITTA_UMA.ID_DITTA_UMA%TYPE,
                        P_DATA_CESSAZIONE          IN      DB_DITTA_UMA.DATA_CESSAZIONE%TYPE,
                        P_ID_UTENTE_AGGIORNAMENTO IN     DB_DOMANDA_ASSEGNAZIONE.EXT_ID_UTENTE_AGGIORNAMENTO%TYPE,
                        P_MSGERR                   IN OUT VARCHAR2,
                        P_CODERR                   IN OUT VARCHAR2) RETURN BOOLEAN IS


CURSOR C_MACCHINE IS
       SELECT A.ID_MACCHINA, B.ID_FORMA_POSSESSO, B.DATA_SCADENZA_LEASING,
                 B.EXT_ID_AZIENDA, C.ID_MOVIMENTI_TARGA, C.ID_NUMERO_TARGA
         FROM DB_UTILIZZO A, DB_POSSESSO B, DB_MOVIMENTI_TARGA C
        WHERE A.ID_UTILIZZO = B.ID_UTILIZZO
          AND A.ID_DITTA_UMA = P_ID_DITTA_UMA_OLD
          AND TO_char(A.DATA_SCARICO,'YYYYMMDD') = TO_char(P_DATA_CESSAZIONE,'YYYYMMDD')
          AND C.ID_MACCHINA = A.ID_MACCHINA
          AND C.DATA_FINE_VALIDITA IS NULL;

N_ID_PROVINCIA     DB_DITTA_UMA.EXT_PROVINCIA_UMA%TYPE;
N_DITTA_UMA        DB_DITTA_UMA.DITTA_UMA%TYPE;
N_ID_UTILIZZO    DB_UTILIZZO.ID_UTILIZZO%TYPE;
BEGIN
    SELECT EXT_PROVINCIA_UMA, DITTA_UMA
      INTO N_ID_PROVINCIA, N_DITTA_UMA
      FROM DB_DITTA_UMA
     WHERE ID_DITTA_UMA = P_ID_DITTA_UMA_NEW;

    FOR REC_MACCHINE IN C_MACCHINE LOOP
       SELECT SEQ_UTILIZZO.NEXTVAL
         INTO N_ID_UTILIZZO
         FROM DUAL;

       INSERT INTO     DB_UTILIZZO (ID_UTILIZZO, ID_DITTA_UMA, ID_MACCHINA, DATA_CARICO,
                 DATA_SCARICO, ID_SCARICO, EXT_ID_UTENTE_AGGIORNAMENTO, DATA_AGGIORNAMENTO)
       VALUES (N_ID_UTILIZZO, P_ID_DITTA_UMA_NEW, REC_MACCHINE.ID_MACCHINA, TRUNC(SYSDATE),
                 NULL, NULL, P_ID_UTENTE_AGGIORNAMENTO, SYSDATE);

       INSERT INTO DB_POSSESSO(ID_POSSESSO, ID_UTILIZZO, ID_FORMA_POSSESSO,
                 DATA_SCADENZA_LEASING, EXT_ID_AZIENDA, DATA_INIZIO_VALIDITA,
              DATA_FINE_VALIDITA, EXT_ID_UTENTE_AGGIORNAMENTO, DATA_AGGIORNAMENTO)
       VALUES (SEQ_POSSESSO.NEXTVAL, N_ID_UTILIZZO, REC_MACCHINE.ID_FORMA_POSSESSO,
                 REC_MACCHINE.DATA_SCADENZA_LEASING, REC_MACCHINE.EXT_ID_AZIENDA,
              TRUNC(SYSDATE), NULL, P_ID_UTENTE_AGGIORNAMENTO, SYSDATE);

       UPDATE DB_MOVIMENTI_TARGA SET DATA_FINE_VALIDITA = SYSDATE
       WHERE ID_MOVIMENTI_TARGA = REC_MACCHINE.ID_MOVIMENTI_TARGA;

       INSERT INTO DB_MOVIMENTI_TARGA(ID_MOVIMENTI_TARGA, ID_NUMERO_TARGA, ID_MACCHINA,
                 ID_MOVIMENTAZIONE, ID_PROVINCIA, DITTA_UMA, PROTOCOLLO_MODELLO_49,
              NUMERO_MODELLO_49, DATA_INIZIO_VALIDITA, DATA_FINE_VALIDITA,
              DATA_PROTOCOLLO_49, DATA_AGGIORNAMENTO, EXT_ID_UTENTE_AGGIORNAMENTO,
              ANNO_MODELLO_49)
       VALUES (SEQ_MOVIMENTI_TARGA.NEXTVAL, REC_MACCHINE.ID_NUMERO_TARGA, REC_MACCHINE.ID_MACCHINA,
                 11, N_ID_PROVINCIA, N_DITTA_UMA, NULL, NULL, TRUNC(SYSDATE),
              NULL, NULL, SYSDATE, P_ID_UTENTE_AGGIORNAMENTO, NULL);
    END LOOP;

    RETURN (TRUE);

exception
 when ERRORE then
       RETURN (FALSE);
 when others then
    P_CODERR := '1';
    P_MSGERR := 'ERRORE CARICA_MACCHINE: '|| SQLERRM;
    RETURN (FALSE);
END CARICA_MACCHINE;

PROCEDURE CREA_DITTA_UMA(P_ID_DITTA_UMA_NEW        IN     DB_DITTA_UMA.ID_DITTA_UMA%TYPE,
                           P_ID_DITTA_UMA_OLD        IN     DB_DITTA_UMA.ID_DITTA_UMA%TYPE,
                            P_ID_UTENTE_AGGIORNAMENTO IN     DB_DITTA_UMA.EXT_ID_UTENTE_AGGIORNAMENTO%TYPE,
                            P_CODERR                    IN OUT VARCHAR2,
                            P_MSGERR                   IN OUT VARCHAR2) IS

D_DATA_CESSAZIONE     DATE;
BEGIN
     P_CODERR          := '0';
     P_MSGERR          := NULL;

     BEGIN
         SELECT DATA_CESSAZIONE
           INTO D_DATA_CESSAZIONE
           FROM DB_DITTA_UMA
          WHERE ID_DITTA_UMA = P_ID_DITTA_UMA_OLD;
     EXCEPTION WHEN NO_DATA_FOUND THEN
       P_CODERR := '1';
       P_MSGERR := 'DITTA UMA DI PARTENZA NON TROVATA. IDENTIFICATIVO DITTA UMA: ' || P_ID_DITTA_UMA_OLD ;
       RAISE ERRORE;
     WHEN OTHERS THEN
       P_CODERR := '1';
       P_MSGERR := 'ERRORE GRAVE ACCESSO DB_DITTA_UMA. CONTATTARE L''ASSISTENZA COMUNICANDO LA SEGUENTE ANOMALIA: ' || SQLERRM;
     RAISE ERRORE;
     END;

     IF D_DATA_CESSAZIONE IS NULL THEN
       P_CODERR := '1';
       P_MSGERR := 'LA DITTA UMA DI PARTENZA NON E'' CESSATA. IMPOSSIBILE PROCEDERE CON LA CREAZIONE DELLA NUOVA DITTA' ;
       RAISE ERRORE;
     END IF;

        IF NOT CARICA_MACCHINE(P_ID_DITTA_UMA_NEW, P_ID_DITTA_UMA_OLD, D_DATA_CESSAZIONE,
            P_ID_UTENTE_AGGIORNAMENTO, P_MSGERR, P_CODERR) THEN
              RAISE ERRORE;
        END IF;

     COMMIT;
exception
 when ERRORE then
   ROLLBACK;
 when others then
   P_CODERR := '1';
   P_MSGERR := 'ERRORE NON GESTITO: ' || sqlerrm;
   ROLLBACK;
END CREA_DITTA_UMA;

END PACK_CREA_DITTA_UMA;

  -- Package
/
